#!/bin/bash
#---------------------------------------------------------------------
##
## @Synopsis Set of functions for dealing with the problem (hopefully a
## @Synopsis temporary problem) of having to use both the gcc2 and gcc3
## @Synopsis compilers.
##
## The migration to gcc3 will take place in the following steps:
## <pre>
## - The gcc spell will be updated to gcc 3
## - gcc2 will be a new spell that installs gcc2 in /opt/gcc2.
## - The gcc spell will have gcc2 as a dependency.
## - Spells that will only compile with gcc3 will have a USEGCC2 file
##   in the spell directory.
## - Sorcery will test for the existance of the USEGCC2 flag in a
##   spell's directory.  If it's there, it will alter the environment
##   so that gcc2 is used for building the spell.
## </pre>
##
## @Implementation These functions were added to allow the use of both the gcc2 and
## @Implementation gcc3 compiler at the same time within sorcery.  The code can be
## @Implementation removed once only one compiler is supported.
##
##
##  @Copyright Copyright 2002 by the Source Mage Team
##
##
#---------------------------------------------------------------------


#---------------------------------------------------------------------
## @param gcc version (digits and dots, followed by an optional +)
## @return 0 if the version of the installed gcc that will be used is equal
##             to the passed version
## @return 0 if the parameter is of the form "version+" and the version of the
##             installed gcc is at least "version"
## @return 1 otherwise
#---------------------------------------------------------------------
function real_using_gcc()  {
  local needed_version=${1%+}
  local installed_version=$(gcc -dumpversion)

  if [[ $needed_version == $1 ]]; then
    grep -qE "^$(esc_str $needed_version)(\.0)*$" <<< "$installed_version"
  else
    local i=0 needed_version2 installed_version2
    explode "$needed_version" . needed_version2
    explode "$installed_version" . installed_version2

    while [[ ${needed_version2[$i]} ]] || [[ ${installed_version2[$i]} ]]; do
      if [[ ${needed_version2[$i]:-0} == ${installed_version2[$i]:-0} ]]; then
        let i++
        continue
      fi
      # capturing the return value of arithmetic comparison inverts it
      return $(( ${needed_version2[$i]:-0} > ${installed_version2[$i]:-0} ))
    done
  fi
}

#---------------------------------------------------------------------
## @param path
##
## Alters the environment so that the gcc in the specified directory
## will be used for compiling
##
#---------------------------------------------------------------------
function gcc_add_paths()  {
  export PATH=$(envar_prepend_path $1/bin $PATH)
  export LD_LIBRARY_PATH=$(envar_prepend_path $1/lib $LD_LIBRARY_PATH)
  export LD_RUN_PATH=$(envar_prepend_path $1/lib $LD_RUN_PATH)
  export INFOPATH=$(envar_prepend_path $1/info $INFOPATH)
  export CPPFLAGS="-I $1/include  $CPPFLAGS"
}

#---------------------------------------------------------------------
##
## Determines if the spell specifies a gcc version to use. If so, it
## alters the environment so that that gcc version is used for compilation.
##
#---------------------------------------------------------------------
function invoke_gcc()  {
  # $GCC_VERSION contains only two of the version fields, but any patchlevel
  # will do, so we pass a regex to the otherwise stricter real_using_gcc
  if [[ $GCC_VERSION ]] && ! real_using_gcc "$GCC_VERSION(\.[0-9])?"; then
    gcc_add_paths /opt/gcc${GCC_VERSION//.}
  elif [[ -f $SCRIPT_DIRECTORY/USEGCC2 ]]; then
    gcc_add_paths /opt/gcc2
  fi
  echo  "Using gcc version: $(gcc -dumpversion)"
}

#---------------------------------------------------------------------
##
## This software is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This software is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this software; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
#---------------------------------------------------------------------
